{
  "name": "new-file-template",
  "displayName": "New File Template",
  "description": "Create a new file or folder from custom templates",
  "version": "2.0.1",
  "icon": "images/new-file-template-logo.png",
  "engines": {
    "vscode": "^1.87.0"
  },
  "categories": [
    "Other"
  ],
  "publisher": "Thinker",
  "license": "MIT",
  "author": {
    "name": "Sivaraman",
    "email": "sendmsg2siva@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/R35007/new-file-template-vscode-extension"
  },
  "files": [
    "dist",
    "images",
    "Templates"
  ],
  "keywords": [
    "New Template",
    "New File Template",
    "New Folder Template",
    "Create Template",
    "File Template",
    "Folder Template",
    "Blueprint",
    "Template",
    "explorer",
    "Module Template",
    "React Template",
    "Storybook Template"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "new-file-template.createSampleTemplate",
        "title": "Create New Sample Template",
        "category": "Templates"
      },
      {
        "command": "new-file-template.newFilesFromTemplate",
        "title": "New File From Template",
        "category": "Templates"
      }
    ],
    "configuration": {
      "title": "New File Template",
      "properties": {
        "new-file-template.settings.templatesPath": {
          "type": "string",
          "default": "./.vscode/templates",
          "description": "Set custom templates folder."
        },
        "new-file-template.settings.overwriteExistingFile": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to overwrite the existing file."
        },
        "new-file-template.settings.variables": {
          "type": "object",
          "default": {},
          "examples": [
            {},
            {
              "foobar": "foo bar",
              "lorem": "Lorem ipsum dolor sit amet consectetur adipisicing elit."
            }
          ],
          "description": "Set custom variables. These variable can be accessed using ${variables.<Your variable name>}."
        },
        "new-file-template.settings.input": {
          "type": "object",
          "default": {},
          "examples": [
            {},
            {
              "fileName": "index",
              "ext": {
                "title": "Extension",
                "placeHolder": "Please select the file Extension",
                "options": [
                  {
                    "label": ".tsx",
                    "description": "Typescript React",
                    "value": ".tsx",
                    "picked": true
                  },
                  {
                    "label": ".ts",
                    "description": "Typescript",
                    "value": ".ts"
                  },
                  {
                    "label": ".jsx",
                    "description": "Javascript React",
                    "value": ".jsx"
                  },
                  {
                    "label": ".js",
                    "description": "Javascript",
                    "value": ".js"
                  },
                  {
                    "label": ".json",
                    "description": "Json",
                    "value": ".json"
                  },
                  {
                    "label": ".java",
                    "description": "Java",
                    "value": ".java"
                  },
                  {
                    "label": ".txt",
                    "description": "Text",
                    "value": ".txt"
                  },
                  {
                    "label": ".md",
                    "description": "Markdown",
                    "value": ".md"
                  }
                ]
              },
              "componentName": {
                "promptAlways": true,
                "value": "AppComponent",
                "placeHolder": "Please provide a componentName in pascal case",
                "validator": "${value?.trim().length >= 5 ? '' : 'Please Enter a minimum 5 characters'}",
                "afterInput": "${value?.trim().length ? _toPascalCase(value) : ''}"
              }
            }
          ],
          "additionalProperties": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "promptAlways": {
                    "type": "boolean",
                    "description": "By default all the inputs will be prompted on demand. Set this to true to prompt always."
                  },
                  "value": {
                    "type": "string",
                    "description": "Set prefill value of the input box."
                  },
                  "placeHolder": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "options": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "picked": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "label",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      }
                    ]
                  },
                  "validator": {
                    "type": "string",
                    "examples": [
                      "${value?.trim().length >= 5 ? '' : 'Please Enter a minimum 5 characters'}"
                    ],
                    "description": "set Custom validator. return a error string if validation fails else return an empty string to proceed"
                  },
                  "afterInput": {
                    "type": "string",
                    "examples": [
                      "${value?.trim().length ? _toPascalCase(value) : ''}",
                      "prefix-${value}-suffix"
                    ],
                    "description": "This will be invoked after the user enters the input. Here we can add prefix or suffix or return any default value."
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "string"
              }
            ]
          }
        }
      }
    },
    "menus": {
      "explorer/context": [
        {
          "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'",
          "command": "new-file-template.newFilesFromTemplate",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.4",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.87.0",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "@vscode/test-cli": "^0.0.6",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.56.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.90.3",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "fs-extra": "^11.2.0"
  }
}
